@model Igt.WebConsola.Base.Models.DocumentosPendientesModel
@{
    ViewData["Title"] = "Documentos Pendientes";
}



<h2>Documentos Pendientes</h2>


<hr />
<h4>Seleccione los filtros a utilizar.</h4>
@using (Html.BeginForm("Mostrar", "DocumentosPendientes", FormMethod.Get))
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })

        <div class="form-group">
            <div class="panel panel-default">
                <div class="panel-heading">Por Tipos</div>
                <div class="panel-body">
                    <div class="text-right">
                        @Html.LabelFor(x => Model.TipoObjeto, "Tipo de objeto:", htmlAttributes: new { @class = "control-label col-md-1" })
                    </div>
                    <div class="col-md-3">
                        <select asp-for="TipoObjeto" class="selectpicker form-control"
                                data-style="btn btn-outline-secondary btn-outline"
                                data-menu-style="dropdown-blue">
                            @if (Model?.TiposObjetos != null)
                            {
                                foreach (var item in Model.TiposObjetos)
                                {
                                    <option value="@item.Value">@item.Text</option>
                                }
                            }
                            else
                            {
                                <option disabled selected>No hay tipos de objetos</option>
                            }

                        </select>
                    </div>
                </div>
            </div>

            <div class="panel panel-default">
                <div class="panel-heading">Por Fechas</div>
                <div class="panel-body">
                    <div class="text-right">
                        @Html.LabelFor(x => Model.FechaDesde, "Desde:", htmlAttributes: new { @class = "control-label col-md-1" })
                    </div>
                    <div class="col-md-3">
                        @Html.EditorFor(model => model.FechaDesde, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.FechaDesde, "", new { @class = "text-danger" })
                    </div>
                    <div class="text-right">
                        @Html.LabelFor(x => Model.FechaHasta, "Hasta:", htmlAttributes: new { @class = "control-label col-md-1" })
                    </div>
                    <div class="col-md-3">
                        @Html.EditorFor(model => model.FechaHasta, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.FechaHasta, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>
            <div class="form-group">
                <div class="col-md-12">
                    <input type="submit" value="Mostrar" formaction="Mostrar" class="btn btn-primary btn-lg" />
                </div>
            </div>
            <div class="panel panel-default">
                <div class="panel-heading">Resultados</div>
                <div class="panel-body">

                    <table id="example" class="table table-striped table-bordered" data-pagination="true"
                           data-id-field="name"
                           data-page-list="[5, 10, 25, 50, 100, ALL]"
                           data-page-size="5">
                        <thead>
                            <tr>
                                @if (Model?.Tabla?.Columns != null)
                                {
                                <tr>
                                        @for (int i = 0; i < Model.Tabla.Columns.Count; i++)
                                        {
                                        <th scope="col">@Model.Tabla.Columns[i].ColumnName</th>
                                        }
                                </tr>
                                }
                                else
                                {
                                <tr><td colspan="10">No hay datos para mostrar.</td></tr>
                                }

                            </tr>
                        </thead>
                        <tbody>
                            @if (Model?.Tabla != null && Model.Tabla.Rows.Count > 0 && Model.Tabla.Columns.Count > 0)
                            {
                                for (int i = 0; i < Model.Tabla.Rows.Count; i++)
                                {
                                    <tr>
                                        @for (int j = 0; j < Model.Tabla.Columns.Count; j++)
                                        {
                                            <td>@Model.Tabla.Rows[i][j]?.ToString()</td>
                                        }
                                    </tr>
                                }
                            }
                            else
                            {
                                <tr><td colspan="10">No hay datos para mostrar.</td></tr>
                            }

                    </table>
                </div>
            </div>
            <p></p>
        </div>
    </div>

}


